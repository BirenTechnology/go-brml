// Copyright 2024 Shanghai Biren Technology Co., Ltd.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// WARNING: This file has automatically been generated on Wed, 10 Apr 2024 10:50:21 CST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package brml

/*
#cgo LDFLAGS: -Wl,--unresolved-symbols=ignore-in-object-files
#include "brml.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import (
	"runtime"
	"unsafe"
)

// brmlInit function as declared in brml/brml.h:695
func brmlInit() Return {
	__ret := C.brmlInit()
	__v := (Return)(__ret)
	return __v
}

// brmlShutdown function as declared in brml/brml.h:708
func brmlShutdown() Return {
	__ret := C.brmlShutdown()
	__v := (Return)(__ret)
	return __v
}

// brmlErrorString function as declared in brml/brml.h:727
func brmlErrorString(Result Return) string {
	cResult, cResultAllocMap := (C.brmlReturn_t)(Result), cgoAllocsUnknown
	__ret := C.brmlErrorString(cResult)
	runtime.KeepAlive(cResultAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// brmlSystemGetDriverVersion function as declared in brml/brml.h:756
func brmlSystemGetDriverVersion(Version *byte, Length uint32) Return {
	cVersion, cVersionAllocMap := (*C.char)(unsafe.Pointer(Version)), cgoAllocsUnknown
	cLength, cLengthAllocMap := (C.uint)(Length), cgoAllocsUnknown
	__ret := C.brmlSystemGetDriverVersion(cVersion, cLength)
	runtime.KeepAlive(cLengthAllocMap)
	runtime.KeepAlive(cVersionAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlSystemGetUmdDriverVersion function as declared in brml/brml.h:773
func brmlSystemGetUmdDriverVersion(UmdDriverVersion *int32) Return {
	cUmdDriverVersion, cUmdDriverVersionAllocMap := (*C.int)(unsafe.Pointer(UmdDriverVersion)), cgoAllocsUnknown
	__ret := C.brmlSystemGetUmdDriverVersion(cUmdDriverVersion)
	runtime.KeepAlive(cUmdDriverVersionAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlSystemGetBRMLVersion function as declared in brml/brml.h:792
func brmlSystemGetBRMLVersion(Version *byte, Length uint32) Return {
	cVersion, cVersionAllocMap := (*C.char)(unsafe.Pointer(Version)), cgoAllocsUnknown
	cLength, cLengthAllocMap := (C.uint)(Length), cgoAllocsUnknown
	__ret := C.brmlSystemGetBRMLVersion(cVersion, cLength)
	runtime.KeepAlive(cLengthAllocMap)
	runtime.KeepAlive(cVersionAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlSystemGetSupaDriverVersion function as declared in brml/brml.h:809
func brmlSystemGetSupaDriverVersion(SupaDriverVersion *int32) Return {
	cSupaDriverVersion, cSupaDriverVersionAllocMap := (*C.int)(unsafe.Pointer(SupaDriverVersion)), cgoAllocsUnknown
	__ret := C.brmlSystemGetSupaDriverVersion(cSupaDriverVersion)
	runtime.KeepAlive(cSupaDriverVersionAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetMinorNumber function as declared in brml/brml.h:824
func brmlDeviceGetMinorNumber(Device Device, MinorNumber *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMinorNumber, cMinorNumberAllocMap := (*C.uint)(unsafe.Pointer(MinorNumber)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetMinorNumber(cDevice, cMinorNumber)
	runtime.KeepAlive(cMinorNumberAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetBoardPartNumber function as declared in brml/brml.h:844
func brmlDeviceGetBoardPartNumber(Device Device, PartNumber *byte, Length uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cPartNumber, cPartNumberAllocMap := (*C.char)(unsafe.Pointer(PartNumber)), cgoAllocsUnknown
	cLength, cLengthAllocMap := (C.uint)(Length), cgoAllocsUnknown
	__ret := C.brmlDeviceGetBoardPartNumber(cDevice, cPartNumber, cLength)
	runtime.KeepAlive(cLengthAllocMap)
	runtime.KeepAlive(cPartNumberAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetProductPartNumber function as declared in brml/brml.h:863
func brmlDeviceGetProductPartNumber(Device Device, PartNumber *byte, Length uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cPartNumber, cPartNumberAllocMap := (*C.char)(unsafe.Pointer(PartNumber)), cgoAllocsUnknown
	cLength, cLengthAllocMap := (C.uint)(Length), cgoAllocsUnknown
	__ret := C.brmlDeviceGetProductPartNumber(cDevice, cPartNumber, cLength)
	runtime.KeepAlive(cLengthAllocMap)
	runtime.KeepAlive(cPartNumberAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetUUID function as declared in brml/brml.h:883
func brmlDeviceGetUUID(Device Device, Uuid *byte, Length uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cUuid, cUuidAllocMap := (*C.char)(unsafe.Pointer(Uuid)), cgoAllocsUnknown
	cLength, cLengthAllocMap := (C.uint)(Length), cgoAllocsUnknown
	__ret := C.brmlDeviceGetUUID(cDevice, cUuid, cLength)
	runtime.KeepAlive(cLengthAllocMap)
	runtime.KeepAlive(cUuidAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetVendorName function as declared in brml/brml.h:900
func brmlDeviceGetVendorName(Device Device, BoardVendor *byte, Length uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cBoardVendor, cBoardVendorAllocMap := (*C.char)(unsafe.Pointer(BoardVendor)), cgoAllocsUnknown
	cLength, cLengthAllocMap := (C.uint)(Length), cgoAllocsUnknown
	__ret := C.brmlDeviceGetVendorName(cDevice, cBoardVendor, cLength)
	runtime.KeepAlive(cLengthAllocMap)
	runtime.KeepAlive(cBoardVendorAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetMemoryInfo function as declared in brml/brml.h:916
func brmlDeviceGetMemoryInfo(Device Device, Memory *Memory) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMemory, cMemoryAllocMap := (*C.brmlMemory_t)(unsafe.Pointer(Memory)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetMemoryInfo(cDevice, cMemory)
	runtime.KeepAlive(cMemoryAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetViolationStatus function as declared in brml/brml.h:934
func brmlDeviceGetViolationStatus(Device Device, PerfPolicyType PerfPolicyType, Value *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cPerfPolicyType, cPerfPolicyTypeAllocMap := (C.brmlPerfPolicyType_t)(PerfPolicyType), cgoAllocsUnknown
	cValue, cValueAllocMap := (*C.uint)(unsafe.Pointer(Value)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetViolationStatus(cDevice, cPerfPolicyType, cValue)
	runtime.KeepAlive(cValueAllocMap)
	runtime.KeepAlive(cPerfPolicyTypeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlSystemGetProcessName function as declared in brml/brml.h:957
func brmlSystemGetProcessName(Pid uint32, Name *byte, Length uint32) Return {
	cPid, cPidAllocMap := (C.uint)(Pid), cgoAllocsUnknown
	cName, cNameAllocMap := (*C.char)(unsafe.Pointer(Name)), cgoAllocsUnknown
	cLength, cLengthAllocMap := (C.uint)(Length), cgoAllocsUnknown
	__ret := C.brmlSystemGetProcessName(cPid, cName, cLength)
	runtime.KeepAlive(cLengthAllocMap)
	runtime.KeepAlive(cNameAllocMap)
	runtime.KeepAlive(cPidAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetFirmwareVersion function as declared in brml/brml.h:989
func brmlDeviceGetFirmwareVersion(Device Device, FirmwareType GPUFirmwareType, Version *byte, Length int32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cFirmwareType, cFirmwareTypeAllocMap := (C.brmlGPUFirmwareType_t)(FirmwareType), cgoAllocsUnknown
	cVersion, cVersionAllocMap := (*C.char)(unsafe.Pointer(Version)), cgoAllocsUnknown
	cLength, cLengthAllocMap := (C.int)(Length), cgoAllocsUnknown
	__ret := C.brmlDeviceGetFirmwareVersion(cDevice, cFirmwareType, cVersion, cLength)
	runtime.KeepAlive(cLengthAllocMap)
	runtime.KeepAlive(cVersionAllocMap)
	runtime.KeepAlive(cFirmwareTypeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetCount_v1 function as declared in brml/brml.h:1004
func brmlDeviceGetCount_v1(DeviceCount *uint32) Return {
	cDeviceCount, cDeviceCountAllocMap := (*C.uint)(unsafe.Pointer(DeviceCount)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetCount(cDeviceCount)
	runtime.KeepAlive(cDeviceCountAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetHandleByIndex_v1 function as declared in brml/brml.h:1031
func brmlDeviceGetHandleByIndex_v1(Index uint32, Device *Device) Return {
	cIndex, cIndexAllocMap := (C.uint)(Index), cgoAllocsUnknown
	cDevice, cDeviceAllocMap := (*C.brmlDevice_t)(unsafe.Pointer(Device)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetHandleByIndex(cIndex, cDevice)
	runtime.KeepAlive(cDeviceAllocMap)
	runtime.KeepAlive(cIndexAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetHandleBySerial function as declared in brml/brml.h:1055
func brmlDeviceGetHandleBySerial(Serial string, Device *Device) Return {
	cSerial, cSerialAllocMap := unpackPCharString(Serial)
	cDevice, cDeviceAllocMap := (*C.brmlDevice_t)(unsafe.Pointer(Device)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetHandleBySerial(cSerial, cDevice)
	runtime.KeepAlive(cDeviceAllocMap)
	runtime.KeepAlive(cSerialAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetHandleByUUID function as declared in brml/brml.h:1074
func brmlDeviceGetHandleByUUID(Uuid string, Device *Device) Return {
	cUuid, cUuidAllocMap := unpackPCharString(Uuid)
	cDevice, cDeviceAllocMap := (*C.brmlDevice_t)(unsafe.Pointer(Device)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetHandleByUUID(cUuid, cDevice)
	runtime.KeepAlive(cDeviceAllocMap)
	runtime.KeepAlive(cUuidAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetIndex function as declared in brml/brml.h:1100
func brmlDeviceGetIndex(Device Device, Index *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cIndex, cIndexAllocMap := (*C.uint)(unsafe.Pointer(Index)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetIndex(cDevice, cIndex)
	runtime.KeepAlive(cIndexAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetNodeId function as declared in brml/brml.h:1114
func brmlDeviceGetNodeId(Device Device, NodeId *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cNodeId, cNodeIdAllocMap := (*C.uint)(unsafe.Pointer(NodeId)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetNodeId(cDevice, cNodeId)
	runtime.KeepAlive(cNodeIdAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetHandleByNodeId function as declared in brml/brml.h:1129
func brmlDeviceGetHandleByNodeId(NodeId uint32, Device *Device) Return {
	cNodeId, cNodeIdAllocMap := (C.uint)(NodeId), cgoAllocsUnknown
	cDevice, cDeviceAllocMap := (*C.brmlDevice_t)(unsafe.Pointer(Device)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetHandleByNodeId(cNodeId, cDevice)
	runtime.KeepAlive(cDeviceAllocMap)
	runtime.KeepAlive(cNodeIdAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceResetGpu function as declared in brml/brml.h:1143
func brmlDeviceResetGpu(Device Device, _type GpuResetType) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	c_type, c_typeAllocMap := (C.brmlGpuResetType_t)(_type), cgoAllocsUnknown
	__ret := C.brmlDeviceResetGpu(cDevice, c_type)
	runtime.KeepAlive(c_typeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetHandleByPciBusId_v1 function as declared in brml/brml.h:1159
func brmlDeviceGetHandleByPciBusId_v1(PciBusId string, Device *Device) Return {
	cPciBusId, cPciBusIdAllocMap := unpackPCharString(PciBusId)
	cDevice, cDeviceAllocMap := (*C.brmlDevice_t)(unsafe.Pointer(Device)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetHandleByPciBusId(cPciBusId, cDevice)
	runtime.KeepAlive(cDeviceAllocMap)
	runtime.KeepAlive(cPciBusIdAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetPciInfo_v1 function as declared in brml/brml.h:1174
func brmlDeviceGetPciInfo_v1(Device Device, PciInfo *PciInfo) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cPciInfo, cPciInfoAllocMap := (*C.brmlPciInfo_t)(unsafe.Pointer(PciInfo)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetPciInfo(cDevice, cPciInfo)
	runtime.KeepAlive(cPciInfoAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetPhysicalSlotNumber function as declared in brml/brml.h:1188
func brmlDeviceGetPhysicalSlotNumber(Device Device, PhySlotNum *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cPhySlotNum, cPhySlotNumAllocMap := (*C.uint)(unsafe.Pointer(PhySlotNum)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetPhysicalSlotNumber(cDevice, cPhySlotNum)
	runtime.KeepAlive(cPhySlotNumAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetMaxPcieLinkWidth function as declared in brml/brml.h:1206
func brmlDeviceGetMaxPcieLinkWidth(Device Device, MaxLinkWidth *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMaxLinkWidth, cMaxLinkWidthAllocMap := (*C.uint)(unsafe.Pointer(MaxLinkWidth)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetMaxPcieLinkWidth(cDevice, cMaxLinkWidth)
	runtime.KeepAlive(cMaxLinkWidthAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetCurrPcieLinkWidth function as declared in brml/brml.h:1221
func brmlDeviceGetCurrPcieLinkWidth(Device Device, CurrLinkWidth *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cCurrLinkWidth, cCurrLinkWidthAllocMap := (*C.uint)(unsafe.Pointer(CurrLinkWidth)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetCurrPcieLinkWidth(cDevice, cCurrLinkWidth)
	runtime.KeepAlive(cCurrLinkWidthAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetMaxPcieLinkGeneration function as declared in brml/brml.h:1239
func brmlDeviceGetMaxPcieLinkGeneration(Device Device, MaxLinkGen *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMaxLinkGen, cMaxLinkGenAllocMap := (*C.uint)(unsafe.Pointer(MaxLinkGen)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetMaxPcieLinkGeneration(cDevice, cMaxLinkGen)
	runtime.KeepAlive(cMaxLinkGenAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetCurrPcieLinkGeneration function as declared in brml/brml.h:1254
func brmlDeviceGetCurrPcieLinkGeneration(Device Device, CurrLinkGen *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cCurrLinkGen, cCurrLinkGenAllocMap := (*C.uint)(unsafe.Pointer(CurrLinkGen)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetCurrPcieLinkGeneration(cDevice, cCurrLinkGen)
	runtime.KeepAlive(cCurrLinkGenAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetPcieThroughput function as declared in brml/brml.h:1274
func brmlDeviceGetPcieThroughput(Device Device, Counter PcieUtilCounter, Value *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cCounter, cCounterAllocMap := (C.brmlPcieUtilCounter_t)(Counter), cgoAllocsUnknown
	cValue, cValueAllocMap := (*C.uint)(unsafe.Pointer(Value)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetPcieThroughput(cDevice, cCounter, cValue)
	runtime.KeepAlive(cValueAllocMap)
	runtime.KeepAlive(cCounterAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetPcieReplayCounter function as declared in brml/brml.h:1290
func brmlDeviceGetPcieReplayCounter(Device Device, Value *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cValue, cValueAllocMap := (*C.uint)(unsafe.Pointer(Value)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetPcieReplayCounter(cDevice, cValue)
	runtime.KeepAlive(cValueAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetPcieReplayNumberRollovers function as declared in brml/brml.h:1305
func brmlDeviceGetPcieReplayNumberRollovers(Device Device, Value *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cValue, cValueAllocMap := (*C.uint)(unsafe.Pointer(Value)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetPcieReplayNumberRollovers(cDevice, cValue)
	runtime.KeepAlive(cValueAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetPcieErrorCounter function as declared in brml/brml.h:1320
func brmlDeviceGetPcieErrorCounter(Device Device, Counter *PciErrorCounter) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cCounter, cCounterAllocMap := (*C.brmlPciErrorCounter_t)(unsafe.Pointer(Counter)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetPcieErrorCounter(cDevice, cCounter)
	runtime.KeepAlive(cCounterAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetVirtualizationMode function as declared in brml/brml.h:1333
func brmlDeviceGetVirtualizationMode(Device Device, VirtualMode *GpuVirtualizationMode) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cVirtualMode, cVirtualModeAllocMap := (*C.brmlGpuVirtualizationMode_t)(unsafe.Pointer(VirtualMode)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetVirtualizationMode(cDevice, cVirtualMode)
	runtime.KeepAlive(cVirtualModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetGpuInfo function as declared in brml/brml.h:1347
func brmlDeviceGetGpuInfo(Device Device, Info *GPUInfo) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cInfo, cInfoAllocMap := (*C.brmlGPUInfo_t)(unsafe.Pointer(Info)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetGpuInfo(cDevice, cInfo)
	runtime.KeepAlive(cInfoAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetClockInfo function as declared in brml/brml.h:1365
func brmlDeviceGetClockInfo(Device Device, _type ClockType, Clock *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	c_type, c_typeAllocMap := (C.brmlClockType_t)(_type), cgoAllocsUnknown
	cClock, cClockAllocMap := (*C.uint)(unsafe.Pointer(Clock)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetClockInfo(cDevice, c_type, cClock)
	runtime.KeepAlive(cClockAllocMap)
	runtime.KeepAlive(c_typeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetMaxClockInfo function as declared in brml/brml.h:1383
func brmlDeviceGetMaxClockInfo(Device Device, _type ClockType, Clock *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	c_type, c_typeAllocMap := (C.brmlClockType_t)(_type), cgoAllocsUnknown
	cClock, cClockAllocMap := (*C.uint)(unsafe.Pointer(Clock)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetMaxClockInfo(cDevice, c_type, cClock)
	runtime.KeepAlive(cClockAllocMap)
	runtime.KeepAlive(c_typeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetClockFreqs function as declared in brml/brml.h:1403
func brmlDeviceSetClockFreqs(Device Device, _type ClockType, ClockFreq *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	c_type, c_typeAllocMap := (C.brmlClockType_t)(_type), cgoAllocsUnknown
	cClockFreq, cClockFreqAllocMap := (*C.uint)(unsafe.Pointer(ClockFreq)), cgoAllocsUnknown
	__ret := C.brmlDeviceSetClockFreqs(cDevice, c_type, cClockFreq)
	runtime.KeepAlive(cClockFreqAllocMap)
	runtime.KeepAlive(c_typeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetTemperature function as declared in brml/brml.h:1423
func brmlDeviceGetTemperature(Device Device, SensorType TemperatureSensors, Temp *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cSensorType, cSensorTypeAllocMap := (C.brmlTemperatureSensors_t)(SensorType), cgoAllocsUnknown
	cTemp, cTempAllocMap := (*C.uint)(unsafe.Pointer(Temp)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetTemperature(cDevice, cSensorType, cTemp)
	runtime.KeepAlive(cTempAllocMap)
	runtime.KeepAlive(cSensorTypeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetTemperatureThreshold function as declared in brml/brml.h:1442
func brmlDeviceGetTemperatureThreshold(Device Device, ThresholdType TemperatureThresholds, Temp *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cThresholdType, cThresholdTypeAllocMap := (C.brmlTemperatureThresholds_t)(ThresholdType), cgoAllocsUnknown
	cTemp, cTempAllocMap := (*C.uint)(unsafe.Pointer(Temp)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetTemperatureThreshold(cDevice, cThresholdType, cTemp)
	runtime.KeepAlive(cTempAllocMap)
	runtime.KeepAlive(cThresholdTypeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetPowerManagementLimit function as declared in brml/brml.h:1463
func brmlDeviceGetPowerManagementLimit(Device Device, Limit *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cLimit, cLimitAllocMap := (*C.uint)(unsafe.Pointer(Limit)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetPowerManagementLimit(cDevice, cLimit)
	runtime.KeepAlive(cLimitAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetPowerThreshold function as declared in brml/brml.h:1481
func brmlDeviceGetPowerThreshold(Device Device, Threshold *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cThreshold, cThresholdAllocMap := (*C.uint)(unsafe.Pointer(Threshold)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetPowerThreshold(cDevice, cThreshold)
	runtime.KeepAlive(cThresholdAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetPowerThreshold function as declared in brml/brml.h:1499
func brmlDeviceSetPowerThreshold(Device Device, Threshold *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cThreshold, cThresholdAllocMap := (*C.uint)(unsafe.Pointer(Threshold)), cgoAllocsUnknown
	__ret := C.brmlDeviceSetPowerThreshold(cDevice, cThreshold)
	runtime.KeepAlive(cThresholdAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetPowerManagementLimitConstraints function as declared in brml/brml.h:1515
func brmlDeviceGetPowerManagementLimitConstraints(Device Device, MinLimit *uint32, MaxLimit *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMinLimit, cMinLimitAllocMap := (*C.uint)(unsafe.Pointer(MinLimit)), cgoAllocsUnknown
	cMaxLimit, cMaxLimitAllocMap := (*C.uint)(unsafe.Pointer(MaxLimit)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetPowerManagementLimitConstraints(cDevice, cMinLimit, cMaxLimit)
	runtime.KeepAlive(cMaxLimitAllocMap)
	runtime.KeepAlive(cMinLimitAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetPowerUsage function as declared in brml/brml.h:1533
func brmlDeviceGetPowerUsage(Device Device, Power *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cPower, cPowerAllocMap := (*C.uint)(unsafe.Pointer(Power)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetPowerUsage(cDevice, cPower)
	runtime.KeepAlive(cPowerAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetPowerSamples function as declared in brml/brml.h:1548
func brmlDeviceGetPowerSamples(Device Device, Power *PowerSamples) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cPower, cPowerAllocMap := (*C.brmlPowerSamples_t)(unsafe.Pointer(Power)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetPowerSamples(cDevice, cPower)
	runtime.KeepAlive(cPowerAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetCurrentClocksThrottleReasons function as declared in brml/brml.h:1566
func brmlDeviceGetCurrentClocksThrottleReasons(Device Device, ClocksThrottleReasons *uint64) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cClocksThrottleReasons, cClocksThrottleReasonsAllocMap := (*C.ulonglong)(unsafe.Pointer(ClocksThrottleReasons)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetCurrentClocksThrottleReasons(cDevice, cClocksThrottleReasons)
	runtime.KeepAlive(cClocksThrottleReasonsAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetCurrent function as declared in brml/brml.h:1582
func brmlDeviceGetCurrent(Device Device, Current *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cCurrent, cCurrentAllocMap := (*C.uint)(unsafe.Pointer(Current)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetCurrent(cDevice, cCurrent)
	runtime.KeepAlive(cCurrentAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetComputeMode function as declared in brml/brml.h:1599
func brmlDeviceGetComputeMode(Device Device, Mode *ComputeMode) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (*C.brmlComputeMode_t)(unsafe.Pointer(Mode)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetComputeMode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetComputeMode function as declared in brml/brml.h:1619
func brmlDeviceSetComputeMode(Device Device, Mode ComputeMode) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (C.brmlComputeMode_t)(Mode), cgoAllocsUnknown
	__ret := C.brmlDeviceSetComputeMode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetPerformanceState function as declared in brml/brml.h:1635
func brmlDeviceGetPerformanceState(Device Device, PState *Pstate) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cPState, cPStateAllocMap := (*C.brmlPstate_t)(unsafe.Pointer(PState)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetPerformanceState(cDevice, cPState)
	runtime.KeepAlive(cPStateAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetP2pThroughput function as declared in brml/brml.h:1656
func brmlDeviceGetP2pThroughput(Device Device, Port uint32, P2pThroughput *P2pThroughput) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cPort, cPortAllocMap := (C.uint)(Port), cgoAllocsUnknown
	cP2pThroughput, cP2pThroughputAllocMap := (*C.brmlP2pThroughput_t)(unsafe.Pointer(P2pThroughput)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetP2pThroughput(cDevice, cPort, cP2pThroughput)
	runtime.KeepAlive(cP2pThroughputAllocMap)
	runtime.KeepAlive(cPortAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetP2pThroughputMonitorMode function as declared in brml/brml.h:1673
func brmlDeviceGetP2pThroughputMonitorMode(Device Device, Mode *EnableState) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (*C.brmlEnableState_t)(unsafe.Pointer(Mode)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetP2pThroughputMonitorMode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetP2pThroughputMonitorMode function as declared in brml/brml.h:1690
func brmlDeviceSetP2pThroughputMonitorMode(Device Device, Mode EnableState) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (C.brmlEnableState_t)(Mode), cgoAllocsUnknown
	__ret := C.brmlDeviceSetP2pThroughputMonitorMode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetMemoryBandwidth function as declared in brml/brml.h:1709
func brmlDeviceGetMemoryBandwidth(Device Device, MemBandwidth *MemoryBandwidth) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMemBandwidth, cMemBandwidthAllocMap := (*C.brmlMemoryBandwidth_t)(unsafe.Pointer(MemBandwidth)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetMemoryBandwidth(cDevice, cMemBandwidth)
	runtime.KeepAlive(cMemBandwidthAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetMemoryBandwidthMonitorMode function as declared in brml/brml.h:1726
func brmlDeviceGetMemoryBandwidthMonitorMode(Device Device, Mode *EnableState) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (*C.brmlEnableState_t)(unsafe.Pointer(Mode)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetMemoryBandwidthMonitorMode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetMemoryBandwidthMonitorMode function as declared in brml/brml.h:1743
func brmlDeviceSetMemoryBandwidthMonitorMode(Device Device, Mode EnableState) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (C.brmlEnableState_t)(Mode), cgoAllocsUnknown
	__ret := C.brmlDeviceSetMemoryBandwidthMonitorMode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetMemoryErrorCounter function as declared in brml/brml.h:1776
func brmlDeviceGetMemoryErrorCounter(Device Device, ErrorType MemoryErrorType, CounterType EccCounterType, LocationType MemoryLocation, Count *uint64) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cErrorType, cErrorTypeAllocMap := (C.brmlMemoryErrorType_t)(ErrorType), cgoAllocsUnknown
	cCounterType, cCounterTypeAllocMap := (C.brmlEccCounterType_t)(CounterType), cgoAllocsUnknown
	cLocationType, cLocationTypeAllocMap := (C.brmlMemoryLocation_t)(LocationType), cgoAllocsUnknown
	cCount, cCountAllocMap := (*C.ulonglong)(unsafe.Pointer(Count)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetMemoryErrorCounter(cDevice, cErrorType, cCounterType, cLocationType, cCount)
	runtime.KeepAlive(cCountAllocMap)
	runtime.KeepAlive(cLocationTypeAllocMap)
	runtime.KeepAlive(cCounterTypeAllocMap)
	runtime.KeepAlive(cErrorTypeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetUtilizationRates function as declared in brml/brml.h:1795
func brmlDeviceGetUtilizationRates(Device Device, Utilization *Utilization) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cUtilization, cUtilizationAllocMap := (*C.brmlUtilization_t)(unsafe.Pointer(Utilization)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetUtilizationRates(cDevice, cUtilization)
	runtime.KeepAlive(cUtilizationAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetGpuUtilization function as declared in brml/brml.h:1811
func brmlDeviceGetGpuUtilization(Device Device, GpuUtilization *GpuUtilization, SamplingPeriodUs *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cGpuUtilization, cGpuUtilizationAllocMap := (*C.brmlGpuUtilization_t)(unsafe.Pointer(GpuUtilization)), cgoAllocsUnknown
	cSamplingPeriodUs, cSamplingPeriodUsAllocMap := (*C.uint)(unsafe.Pointer(SamplingPeriodUs)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetGpuUtilization(cDevice, cGpuUtilization, cSamplingPeriodUs)
	runtime.KeepAlive(cSamplingPeriodUsAllocMap)
	runtime.KeepAlive(cGpuUtilizationAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetEncoderUtilization function as declared in brml/brml.h:1827
func brmlDeviceGetEncoderUtilization(Device Device, Utilization *uint32, SamplingPeriodUs *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cUtilization, cUtilizationAllocMap := (*C.uint)(unsafe.Pointer(Utilization)), cgoAllocsUnknown
	cSamplingPeriodUs, cSamplingPeriodUsAllocMap := (*C.uint)(unsafe.Pointer(SamplingPeriodUs)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetEncoderUtilization(cDevice, cUtilization, cSamplingPeriodUs)
	runtime.KeepAlive(cSamplingPeriodUsAllocMap)
	runtime.KeepAlive(cUtilizationAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetDecoderUtilization function as declared in brml/brml.h:1844
func brmlDeviceGetDecoderUtilization(Device Device, Utilization *uint32, SamplingPeriodUs *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cUtilization, cUtilizationAllocMap := (*C.uint)(unsafe.Pointer(Utilization)), cgoAllocsUnknown
	cSamplingPeriodUs, cSamplingPeriodUsAllocMap := (*C.uint)(unsafe.Pointer(SamplingPeriodUs)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetDecoderUtilization(cDevice, cUtilization, cSamplingPeriodUs)
	runtime.KeepAlive(cSamplingPeriodUsAllocMap)
	runtime.KeepAlive(cUtilizationAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetEncoderCapacity function as declared in brml/brml.h:1861
func brmlDeviceGetEncoderCapacity(Device Device, EncoderQueryType EncoderType, EncoderCapacity *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cEncoderQueryType, cEncoderQueryTypeAllocMap := (C.brmlEncoderType_t)(EncoderQueryType), cgoAllocsUnknown
	cEncoderCapacity, cEncoderCapacityAllocMap := (*C.uint)(unsafe.Pointer(EncoderCapacity)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetEncoderCapacity(cDevice, cEncoderQueryType, cEncoderCapacity)
	runtime.KeepAlive(cEncoderCapacityAllocMap)
	runtime.KeepAlive(cEncoderQueryTypeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetEccMode function as declared in brml/brml.h:1879
func brmlDeviceGetEccMode(Device Device, State *EnableState) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cState, cStateAllocMap := (*C.brmlEnableState_t)(unsafe.Pointer(State)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetEccMode(cDevice, cState)
	runtime.KeepAlive(cStateAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetTotalEccErrors function as declared in brml/brml.h:1901
func brmlDeviceGetTotalEccErrors(Device Device, ErrorType MemoryErrorType, CounterType EccCounterType, EccCounts *uint64) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cErrorType, cErrorTypeAllocMap := (C.brmlMemoryErrorType_t)(ErrorType), cgoAllocsUnknown
	cCounterType, cCounterTypeAllocMap := (C.brmlEccCounterType_t)(CounterType), cgoAllocsUnknown
	cEccCounts, cEccCountsAllocMap := (*C.ulonglong)(unsafe.Pointer(EccCounts)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetTotalEccErrors(cDevice, cErrorType, cCounterType, cEccCounts)
	runtime.KeepAlive(cEccCountsAllocMap)
	runtime.KeepAlive(cCounterTypeAllocMap)
	runtime.KeepAlive(cErrorTypeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceClearEccErrorCounts function as declared in brml/brml.h:1928
func brmlDeviceClearEccErrorCounts(Device Device, CounterType EccCounterType) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cCounterType, cCounterTypeAllocMap := (C.brmlEccCounterType_t)(CounterType), cgoAllocsUnknown
	__ret := C.brmlDeviceClearEccErrorCounts(cDevice, cCounterType)
	runtime.KeepAlive(cCounterTypeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetTotalAerErrors function as declared in brml/brml.h:1946
func brmlDeviceGetTotalAerErrors(Device Device, ErrorType AerErrorType, AerCounts *uint64) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cErrorType, cErrorTypeAllocMap := (C.brmlAerErrorType_t)(ErrorType), cgoAllocsUnknown
	cAerCounts, cAerCountsAllocMap := (*C.ulonglong)(unsafe.Pointer(AerCounts)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetTotalAerErrors(cDevice, cErrorType, cAerCounts)
	runtime.KeepAlive(cAerCountsAllocMap)
	runtime.KeepAlive(cErrorTypeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetHealthStatus function as declared in brml/brml.h:1962
func brmlDeviceGetHealthStatus(Device Device, Status *GpuHealthStatus) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cStatus, cStatusAllocMap := (*C.brmlGpuHealthStatus_t)(unsafe.Pointer(Status)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetHealthStatus(cDevice, cStatus)
	runtime.KeepAlive(cStatusAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetComputeRunningProcesses_v1 function as declared in brml/brml.h:1991
func brmlDeviceGetComputeRunningProcesses_v1(Device Device, InfoCount *uint32, Infos *ProcessInfo) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cInfoCount, cInfoCountAllocMap := (*C.uint)(unsafe.Pointer(InfoCount)), cgoAllocsUnknown
	cInfos, cInfosAllocMap := (*C.brmlProcessInfo_t)(unsafe.Pointer(Infos)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetComputeRunningProcesses(cDevice, cInfoCount, cInfos)
	runtime.KeepAlive(cInfosAllocMap)
	runtime.KeepAlive(cInfoCountAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetProcessUtilization function as declared in brml/brml.h:2030
func brmlDeviceGetProcessUtilization(Device Device, Utilization *ProcessUtilizationSample, ProcessSamplesCount *uint32, LastSeenTimeStamp uint64) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cUtilization, cUtilizationAllocMap := (*C.brmlProcessUtilizationSample_t)(unsafe.Pointer(Utilization)), cgoAllocsUnknown
	cProcessSamplesCount, cProcessSamplesCountAllocMap := (*C.uint)(unsafe.Pointer(ProcessSamplesCount)), cgoAllocsUnknown
	cLastSeenTimeStamp, cLastSeenTimeStampAllocMap := (C.ulonglong)(LastSeenTimeStamp), cgoAllocsUnknown
	__ret := C.brmlDeviceGetProcessUtilization(cDevice, cUtilization, cProcessSamplesCount, cLastSeenTimeStamp)
	runtime.KeepAlive(cLastSeenTimeStampAllocMap)
	runtime.KeepAlive(cProcessSamplesCountAllocMap)
	runtime.KeepAlive(cUtilizationAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetTopologyCommonAncestor function as declared in brml/brml.h:2056
func brmlDeviceGetTopologyCommonAncestor(Device1 Device, Device2 Device, PathInfo *GpuTopologyLevel) Return {
	cDevice1, cDevice1AllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device1)), cgoAllocsUnknown
	cDevice2, cDevice2AllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device2)), cgoAllocsUnknown
	cPathInfo, cPathInfoAllocMap := (*C.brmlGpuTopologyLevel_t)(unsafe.Pointer(PathInfo)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetTopologyCommonAncestor(cDevice1, cDevice2, cPathInfo)
	runtime.KeepAlive(cPathInfoAllocMap)
	runtime.KeepAlive(cDevice2AllocMap)
	runtime.KeepAlive(cDevice1AllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetLocalCpuList function as declared in brml/brml.h:2072
func brmlDeviceGetLocalCpuList(Device Device, LocalCpuList *byte, Length uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cLocalCpuList, cLocalCpuListAllocMap := (*C.char)(unsafe.Pointer(LocalCpuList)), cgoAllocsUnknown
	cLength, cLengthAllocMap := (C.uint)(Length), cgoAllocsUnknown
	__ret := C.brmlDeviceGetLocalCpuList(cDevice, cLocalCpuList, cLength)
	runtime.KeepAlive(cLengthAllocMap)
	runtime.KeepAlive(cLocalCpuListAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetNumaNode function as declared in brml/brml.h:2086
func brmlDeviceGetNumaNode(Device Device, NumaNode *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cNumaNode, cNumaNodeAllocMap := (*C.uint)(unsafe.Pointer(NumaNode)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetNumaNode(cDevice, cNumaNode)
	runtime.KeepAlive(cNumaNodeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetP2PStatus function as declared in brml/brml.h:2103
func brmlDeviceGetP2PStatus(Device1 Device, Device2 Device, PortNum *uint32) Return {
	cDevice1, cDevice1AllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device1)), cgoAllocsUnknown
	cDevice2, cDevice2AllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device2)), cgoAllocsUnknown
	cPortNum, cPortNumAllocMap := (*C.uint)(unsafe.Pointer(PortNum)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetP2PStatus(cDevice1, cDevice2, cPortNum)
	runtime.KeepAlive(cPortNumAllocMap)
	runtime.KeepAlive(cDevice2AllocMap)
	runtime.KeepAlive(cDevice1AllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetP2PStatus_v2 function as declared in brml/brml.h:2117
func brmlDeviceGetP2PStatus_v2(Device1 Device, Device2 Device, P2pStatus *P2pStatus) Return {
	cDevice1, cDevice1AllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device1)), cgoAllocsUnknown
	cDevice2, cDevice2AllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device2)), cgoAllocsUnknown
	cP2pStatus, cP2pStatusAllocMap := (*C.brmlP2pStatus_t)(unsafe.Pointer(P2pStatus)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetP2PStatus_v2(cDevice1, cDevice2, cP2pStatus)
	runtime.KeepAlive(cP2pStatusAllocMap)
	runtime.KeepAlive(cDevice2AllocMap)
	runtime.KeepAlive(cDevice1AllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetBrLinkNumber function as declared in brml/brml.h:2132
func brmlDeviceGetBrLinkNumber(Device Device, LinkNum *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cLinkNum, cLinkNumAllocMap := (*C.uint)(unsafe.Pointer(LinkNum)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetBrLinkNumber(cDevice, cLinkNum)
	runtime.KeepAlive(cLinkNumAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetBrLinkRemotePciInfo function as declared in brml/brml.h:2149
func brmlDeviceGetBrLinkRemotePciInfo(Device Device, Link uint32, PciInfo *PciInfo) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cLink, cLinkAllocMap := (C.uint)(Link), cgoAllocsUnknown
	cPciInfo, cPciInfoAllocMap := (*C.brmlPciInfo_t)(unsafe.Pointer(PciInfo)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetBrLinkRemotePciInfo(cDevice, cLink, cPciInfo)
	runtime.KeepAlive(cPciInfoAllocMap)
	runtime.KeepAlive(cLinkAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetBrLinkErrorCounter function as declared in brml/brml.h:2169
func brmlDeviceGetBrLinkErrorCounter(Device Device, Link uint32, Counter BrLinkErrorCounter, Value *uint64) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cLink, cLinkAllocMap := (C.uint)(Link), cgoAllocsUnknown
	cCounter, cCounterAllocMap := (C.brmlBrLinkErrorCounter_t)(Counter), cgoAllocsUnknown
	cValue, cValueAllocMap := (*C.ulonglong)(unsafe.Pointer(Value)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetBrLinkErrorCounter(cDevice, cLink, cCounter, cValue)
	runtime.KeepAlive(cValueAllocMap)
	runtime.KeepAlive(cCounterAllocMap)
	runtime.KeepAlive(cLinkAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetBrLinkState function as declared in brml/brml.h:2189
func brmlDeviceGetBrLinkState(Device Device, Link uint32, State *EnableState) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cLink, cLinkAllocMap := (C.uint)(Link), cgoAllocsUnknown
	cState, cStateAllocMap := (*C.brmlEnableState_t)(unsafe.Pointer(State)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetBrLinkState(cDevice, cLink, cState)
	runtime.KeepAlive(cStateAllocMap)
	runtime.KeepAlive(cLinkAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetL2padSize function as declared in brml/brml.h:2213
func brmlDeviceGetL2padSize(Device Device, Size *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cSize, cSizeAllocMap := (*C.uint)(unsafe.Pointer(Size)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetL2padSize(cDevice, cSize)
	runtime.KeepAlive(cSizeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetL2padSize function as declared in brml/brml.h:2228
func brmlDeviceSetL2padSize(Device Device, Size uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cSize, cSizeAllocMap := (C.uint)(Size), cgoAllocsUnknown
	__ret := C.brmlDeviceSetL2padSize(cDevice, cSize)
	runtime.KeepAlive(cSizeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetDtgMode function as declared in brml/brml.h:2243
func brmlDeviceGetDtgMode(Device Device, Mode *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (*C.uint)(unsafe.Pointer(Mode)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetDtgMode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetDtgMode function as declared in brml/brml.h:2258
func brmlDeviceSetDtgMode(Device Device, Mode uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (C.uint)(Mode), cgoAllocsUnknown
	__ret := C.brmlDeviceSetDtgMode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetMcastVfNumber function as declared in brml/brml.h:2273
func brmlDeviceGetMcastVfNumber(Device Device, Number *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cNumber, cNumberAllocMap := (*C.uint)(unsafe.Pointer(Number)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetMcastVfNumber(cDevice, cNumber)
	runtime.KeepAlive(cNumberAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetMcastVfNumber function as declared in brml/brml.h:2292
func brmlDeviceSetMcastVfNumber(Device Device, Number uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cNumber, cNumberAllocMap := (C.uint)(Number), cgoAllocsUnknown
	__ret := C.brmlDeviceSetMcastVfNumber(cDevice, cNumber)
	runtime.KeepAlive(cNumberAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetMcastHalfUma8Mode function as declared in brml/brml.h:2307
func brmlDeviceGetMcastHalfUma8Mode(Device Device, Mode *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (*C.uint)(unsafe.Pointer(Mode)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetMcastHalfUma8Mode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetMcastHalfUma8Mode function as declared in brml/brml.h:2326
func brmlDeviceSetMcastHalfUma8Mode(Device Device, Mode uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (C.uint)(Mode), cgoAllocsUnknown
	__ret := C.brmlDeviceSetMcastHalfUma8Mode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetMcastHalfUma16Mode function as declared in brml/brml.h:2341
func brmlDeviceGetMcastHalfUma16Mode(Device Device, Mode *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (*C.uint)(unsafe.Pointer(Mode)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetMcastHalfUma16Mode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetMcastHalfUma16Mode function as declared in brml/brml.h:2360
func brmlDeviceSetMcastHalfUma16Mode(Device Device, Mode uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (C.uint)(Mode), cgoAllocsUnknown
	__ret := C.brmlDeviceSetMcastHalfUma16Mode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetHealthCheckCpTimeout function as declared in brml/brml.h:2375
func brmlDeviceGetHealthCheckCpTimeout(Device Device, Timeout *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cTimeout, cTimeoutAllocMap := (*C.uint)(unsafe.Pointer(Timeout)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetHealthCheckCpTimeout(cDevice, cTimeout)
	runtime.KeepAlive(cTimeoutAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetHealthCheckCpTimeout function as declared in brml/brml.h:2390
func brmlDeviceSetHealthCheckCpTimeout(Device Device, Timeout uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cTimeout, cTimeoutAllocMap := (C.uint)(Timeout), cgoAllocsUnknown
	__ret := C.brmlDeviceSetHealthCheckCpTimeout(cDevice, cTimeout)
	runtime.KeepAlive(cTimeoutAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetHealthCheckSdmaTimeout function as declared in brml/brml.h:2405
func brmlDeviceGetHealthCheckSdmaTimeout(Device Device, Timeout *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cTimeout, cTimeoutAllocMap := (*C.uint)(unsafe.Pointer(Timeout)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetHealthCheckSdmaTimeout(cDevice, cTimeout)
	runtime.KeepAlive(cTimeoutAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetHealthCheckSdmaTimeout function as declared in brml/brml.h:2420
func brmlDeviceSetHealthCheckSdmaTimeout(Device Device, Timeout uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cTimeout, cTimeoutAllocMap := (C.uint)(Timeout), cgoAllocsUnknown
	__ret := C.brmlDeviceSetHealthCheckSdmaTimeout(cDevice, cTimeout)
	runtime.KeepAlive(cTimeoutAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetHealthCheckMode function as declared in brml/brml.h:2435
func brmlDeviceGetHealthCheckMode(Device Device, Mode *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (*C.uint)(unsafe.Pointer(Mode)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetHealthCheckMode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetHealthCheckMode function as declared in brml/brml.h:2451
func brmlDeviceSetHealthCheckMode(Device Device, Mode uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (C.uint)(Mode), cgoAllocsUnknown
	__ret := C.brmlDeviceSetHealthCheckMode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetWawMode function as declared in brml/brml.h:2466
func brmlDeviceGetWawMode(Device Device, Mode *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (*C.uint)(unsafe.Pointer(Mode)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetWawMode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetWawMode function as declared in brml/brml.h:2481
func brmlDeviceSetWawMode(Device Device, Mode uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (C.uint)(Mode), cgoAllocsUnknown
	__ret := C.brmlDeviceSetWawMode(cDevice, cMode)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetSviMode function as declared in brml/brml.h:2510
func brmlDeviceGetSviMode(Device Device, CurrentMode *uint32, PendingMode *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cCurrentMode, cCurrentModeAllocMap := (*C.uint)(unsafe.Pointer(CurrentMode)), cgoAllocsUnknown
	cPendingMode, cPendingModeAllocMap := (*C.uint)(unsafe.Pointer(PendingMode)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetSviMode(cDevice, cCurrentMode, cPendingMode)
	runtime.KeepAlive(cPendingModeAllocMap)
	runtime.KeepAlive(cCurrentModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceSetSVIMode function as declared in brml/brml.h:2531
func brmlDeviceSetSVIMode(Device Device, Mode uint32, ActivationStatus *Return) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMode, cModeAllocMap := (C.uint)(Mode), cgoAllocsUnknown
	cActivationStatus, cActivationStatusAllocMap := (*C.brmlReturn_t)(unsafe.Pointer(ActivationStatus)), cgoAllocsUnknown
	__ret := C.brmlDeviceSetSVIMode(cDevice, cMode, cActivationStatus)
	runtime.KeepAlive(cActivationStatusAllocMap)
	runtime.KeepAlive(cModeAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetGpuInstanceById function as declared in brml/brml.h:2548
func brmlDeviceGetGpuInstanceById(Device Device, Id uint32, GpuInstance *Device) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cId, cIdAllocMap := (C.uint)(Id), cgoAllocsUnknown
	cGpuInstance, cGpuInstanceAllocMap := (*C.brmlDevice_t)(unsafe.Pointer(GpuInstance)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetGpuInstanceById(cDevice, cId, cGpuInstance)
	runtime.KeepAlive(cGpuInstanceAllocMap)
	runtime.KeepAlive(cIdAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// brmlDeviceGetInstanceNumber function as declared in brml/brml.h:2563
func brmlDeviceGetInstanceNumber(Device Device, Number *uint32) Return {
	cDevice, cDeviceAllocMap := *(*C.brmlDevice_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cNumber, cNumberAllocMap := (*C.uint)(unsafe.Pointer(Number)), cgoAllocsUnknown
	__ret := C.brmlDeviceGetInstanceNumber(cDevice, cNumber)
	runtime.KeepAlive(cNumberAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}
