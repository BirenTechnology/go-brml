// Copyright 2024 Shanghai Biren Technology Co., Ltd.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// WARNING: This file has automatically been generated on Wed, 10 Apr 2024 10:50:21 CST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package brml

/*
#cgo LDFLAGS: -Wl,--unresolved-symbols=ignore-in-object-files
#include "brml.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"

const (
	// API_VERSION as defined in brml/brml.h:35
	API_VERSION = 1
	// API_VERSION_STR as defined in brml/brml.h:36
	API_VERSION_STR = "1"
	// VALUE_NOT_AVAILABLE as defined in brml/brml.h:50
	VALUE_NOT_AVAILABLE = -1
	// DEVICE_PCI_BUS_ID_FMT as defined in brml/brml.h:56
	DEVICE_PCI_BUS_ID_FMT = "%08X:%02X:%02X.%01X"
	// DEVICE_PCI_BUS_ID_BUFFER_SIZE as defined in brml/brml.h:61
	DEVICE_PCI_BUS_ID_BUFFER_SIZE = 32
	// DEVICE_UUID_BUFFER_SIZE as defined in brml/brml.h:66
	DEVICE_UUID_BUFFER_SIZE = 80
	// DEVICE_SERIAL_BUFFER_SIZE as defined in brml/brml.h:71
	DEVICE_SERIAL_BUFFER_SIZE = 32
	// SYSTEM_DRIVER_VERSION_BUFFER_SIZE as defined in brml/brml.h:76
	SYSTEM_DRIVER_VERSION_BUFFER_SIZE = 80
	// SYSTEM_FIRMWARE_VERSION_BUFFER_SIZE as defined in brml/brml.h:81
	SYSTEM_FIRMWARE_VERSION_BUFFER_SIZE = 80
	// SYSTEM_BRML_VERSION_BUFFER_SIZE as defined in brml/brml.h:86
	SYSTEM_BRML_VERSION_BUFFER_SIZE = 80
	// DEVICE_PART_NUMBER_BUFFER_SIZE as defined in brml/brml.h:91
	DEVICE_PART_NUMBER_BUFFER_SIZE = 80
	// DEVICE_NAME_BUFFER_SIZE as defined in brml/brml.h:96
	DEVICE_NAME_BUFFER_SIZE = 64
	// DEVICE_SVI_DISABLE as defined in brml/brml.h:111
	DEVICE_SVI_DISABLE = 0
	// DEVICE_SVI_ENABLE as defined in brml/brml.h:116
	DEVICE_SVI_ENABLE = 1
	// DEVICE_SVI_MODE0 as defined in brml/brml.h:121
	DEVICE_SVI_MODE0 = 1
	// DEVICE_SVI_MODE1 as defined in brml/brml.h:126
	DEVICE_SVI_MODE1 = 2
	// DEVICE_SVI_MODE2 as defined in brml/brml.h:131
	DEVICE_SVI_MODE2 = 4
	// ClocksThrottleReasonHwSlowdown as defined in brml/brml.h:152
	ClocksThrottleReasonHwSlowdown = 1
	// ClocksThrottleReasonHwThermalSlowdown as defined in brml/brml.h:163
	ClocksThrottleReasonHwThermalSlowdown = 2
	// ClocksThrottleReasonHwPowerBrakeSlowdown as defined in brml/brml.h:174
	ClocksThrottleReasonHwPowerBrakeSlowdown = 4
	// ClocksThrottleReasonAll as defined in brml/brml.h:179
	ClocksThrottleReasonAll = 7
	// EventTypeTopology as defined in brml/brml.h:192
	EventTypeTopology = 2
	// EventTypeThermal as defined in brml/brml.h:195
	EventTypeThermal = 4
	// EventTypeNone as defined in brml/brml.h:198
	EventTypeNone = 0
	// EventTypeAll as defined in brml/brml.h:201
	EventTypeAll = 6
)

// EnableState as declared in brml/brml.h:220
type EnableState int32

// EnableState enumeration from brml/brml.h:220
const (
	FEATURE_DISABLED EnableState = iota
	FEATURE_ENABLED  EnableState = 1
)

// GPUFirmwareType as declared in brml/brml.h:237
type GPUFirmwareType int32

// GPUFirmwareType enumeration from brml/brml.h:237
const (
	GPU_FIRMWARE_TYPE_CP     GPUFirmwareType = 1
	GPU_FIRMWARE_TYPE_SDMA   GPUFirmwareType = 2
	GPU_FIRMWARE_TYPE_ENCODE GPUFirmwareType = 3
	GPU_FIRMWARE_TYPE_DECODE GPUFirmwareType = 4
	GPU_FIRMWARE_TYPE_HBM    GPUFirmwareType = 5
	GPU_FIRMWARE_TYPE_FLASH  GPUFirmwareType = 6
	GPU_FIRMWARE_TYPE_MPU    GPUFirmwareType = 7
	GPU_FIRMWARE_TYPE_PMU    GPUFirmwareType = 8
	GPU_FIRMWARE_TYPE_COUNT  GPUFirmwareType = 9
)

// TemperatureThresholds as declared in brml/brml.h:247
type TemperatureThresholds int32

// TemperatureThresholds enumeration from brml/brml.h:247
const (
	TEMPERATURE_THRESHOLD_SHUTDOWN TemperatureThresholds = iota
	TEMPERATURE_THRESHOLD_SLOWDOWN TemperatureThresholds = 1
	TEMPERATURE_THRESHOLD_COUNT    TemperatureThresholds = 2
)

// TemperatureSensors as declared in brml/brml.h:267
type TemperatureSensors int32

// TemperatureSensors enumeration from brml/brml.h:267
const (
	TEMPERATURE_GPU           TemperatureSensors = iota
	TEMPERATURE_MEMORY        TemperatureSensors = 1
	TEMPERATURE_SPC           TemperatureSensors = 2
	TEMPERATURE_BOARD_SENSOR0 TemperatureSensors = 3
	TEMPERATURE_BOARD_SENSOR1 TemperatureSensors = 4
	TEMPERATURE_BOARD_SENSOR2 TemperatureSensors = 5
	TEMPERATURE_BOARD_SENSOR3 TemperatureSensors = 6
	TEMPERATURE_DIODE_SENSOR0 TemperatureSensors = 7
	TEMPERATURE_DIODE_SENSOR1 TemperatureSensors = 8
	TEMPERATURE_DIODE_SENSOR2 TemperatureSensors = 9
	TEMPERATURE_DIODE_SENSOR3 TemperatureSensors = 10
	TEMPERATURE_COUNT         TemperatureSensors = 11
)

// MemoryErrorType as declared in brml/brml.h:290
type MemoryErrorType int32

// MemoryErrorType enumeration from brml/brml.h:290
const (
	MEMORY_ERROR_TYPE_CORRECTED   MemoryErrorType = iota
	MEMORY_ERROR_TYPE_UNCORRECTED MemoryErrorType = 1
	MEMORY_ERROR_TYPE_COUNT       MemoryErrorType = 2
)

// AerErrorType as declared in brml/brml.h:302
type AerErrorType int32

// AerErrorType enumeration from brml/brml.h:302
const (
	AER_ERROR_TYPE_CORRECTED AerErrorType = iota
	AER_ERROR_TYPE_FATAL     AerErrorType = 1
	AER_ERROR_TYPE_NONFATAL  AerErrorType = 2
	AER_ERROR_TYPE_COUNT     AerErrorType = 3
)

// EccCounterType as declared in brml/brml.h:314
type EccCounterType int32

// EccCounterType enumeration from brml/brml.h:314
const (
	VOLATILE_ECC           EccCounterType = iota
	ECC_COUNTER_TYPE_COUNT EccCounterType = 1
)

// ClockType as declared in brml/brml.h:330
type ClockType int32

// ClockType enumeration from brml/brml.h:330
const (
	CLOCK_SOC    ClockType = iota
	CLOCK_CORE   ClockType = 1
	CLOCK_MEM    ClockType = 2
	CLOCK_ENCODE ClockType = 3
	CLOCK_DECODE ClockType = 4
	CLOCK_COUNT  ClockType = 5
)

// GpuResetType as declared in brml/brml.h:340
type GpuResetType int32

// GpuResetType enumeration from brml/brml.h:340
const (
	GPU_RESET   GpuResetType = iota
	RESET_COUNT GpuResetType = 1
)

// Return as declared in brml/brml.h:365
type Return int32

// Return enumeration from brml/brml.h:365
const (
	SUCCESS                       Return = iota
	ERROR_UNINITIALIZED           Return = 1
	ERROR_INVALID_ARGUMENT        Return = 2
	ERROR_NOT_SUPPORTED           Return = 3
	ERROR_NO_PERMISSION           Return = 4
	ERROR_NOT_FOUND               Return = 5
	ERROR_INSUFFICIENT_SIZE       Return = 6
	ERROR_DRIVER_NOT_LOADED       Return = 7
	ERROR_TIMEOUT                 Return = 8
	ERROR_UNEXPECTED_DATA         Return = 9
	ERROR_UNEXPECTED_SIZE         Return = 10
	ERROR_NO_DATA                 Return = 11
	ERROR_INSUFFICIENT_RESOURCES  Return = 12
	ERROR_FILE_ERROR              Return = 13
	ERROR_INTERRUPT               Return = 14
	ERROR_BUSY                    Return = 15
	ERROR_DRIVER_VERSION_MISMATCH Return = 16
	ERROR_IN_USE                  Return = 17
	ERROR_UNKNOWN                 Return = 255
)

// MemoryLocation as declared in brml/brml.h:376
type MemoryLocation int32

// MemoryLocation enumeration from brml/brml.h:376
const (
	MEMORY_LOCATION_L1_CACHE      MemoryLocation = iota
	MEMORY_LOCATION_L2_CACHE      MemoryLocation = 1
	MEMORY_LOCATION_DEVICE_MEMORY MemoryLocation = 2
	MEMORY_LOCATION_COUNT         MemoryLocation = 3
)

// GpuTopologyLevel as declared in brml/brml.h:390
type GpuTopologyLevel int32

// GpuTopologyLevel enumeration from brml/brml.h:390
const (
	TOPOLOGY_INTERNAL   GpuTopologyLevel = iota
	TOPOLOGY_SINGLE     GpuTopologyLevel = 10
	TOPOLOGY_MULTIPLE   GpuTopologyLevel = 20
	TOPOLOGY_HOSTBRIDGE GpuTopologyLevel = 30
	TOPOLOGY_NODE       GpuTopologyLevel = 40
	TOPOLOGY_SYSTEM     GpuTopologyLevel = 50
)

// GpuHealthStatus as declared in brml/brml.h:400
type GpuHealthStatus int32

// GpuHealthStatus enumeration from brml/brml.h:400
const (
	HEALTH_STATUS_OK               GpuHealthStatus = iota
	HEALTH_STATUS_WARNING          GpuHealthStatus = 1
	HEALTH_STATUS_CRITICAL_WARNING GpuHealthStatus = 2
	HEALTH_STATUS_ERROR            GpuHealthStatus = 3
)

// PerfPolicyType as declared in brml/brml.h:410
type PerfPolicyType int32

// PerfPolicyType enumeration from brml/brml.h:410
const (
	PERF_POLICY_POWER   PerfPolicyType = iota
	PERF_POLICY_THERMAL PerfPolicyType = 1
	PERF_POLICY_COUNT   PerfPolicyType = 2
)

// PcieUtilCounter as declared in brml/brml.h:421
type PcieUtilCounter int32

// PcieUtilCounter enumeration from brml/brml.h:421
const (
	PCIE_UTIL_TX_BYTES PcieUtilCounter = iota
	PCIE_UTIL_RX_BYTES PcieUtilCounter = 1
	PCIE_UTIL_COUNT    PcieUtilCounter = 2
)

// GpuVirtualizationMode as declared in brml/brml.h:442
type GpuVirtualizationMode int32

// GpuVirtualizationMode enumeration from brml/brml.h:442
const (
	GPU_VIRTUALIZATION_MODE_NONE            GpuVirtualizationMode = iota
	GPU_VIRTUALIZATION_MODE_PASSTHROUGH     GpuVirtualizationMode = 1
	GPU_VIRTUALIZATION_MODE_VGPU            GpuVirtualizationMode = 2
	GPU_VIRTUALIZATION_MODE_HYPERVISOR_HOST GpuVirtualizationMode = 3
)

// EncoderType as declared in brml/brml.h:450
type EncoderType int32

// EncoderType enumeration from brml/brml.h:450
const (
	ENCODER_QUERY_H264 EncoderType = iota
	ENCODER_QUERY_HEVC EncoderType = 1
)

// ComputeMode as declared in brml/brml.h:461
type ComputeMode int32

// ComputeMode enumeration from brml/brml.h:461
const (
	COMPUTEMODE_DEFAULT           ComputeMode = iota
	COMPUTEMODE_EXCLUSIVE_PROCESS ComputeMode = 1
	COMPUTEMODE_PROHIBITED        ComputeMode = 2
	COMPUTEMODE_COUNT             ComputeMode = 3
)

// P2pLinkType as declared in brml/brml.h:470
type P2pLinkType int32

// P2pLinkType enumeration from brml/brml.h:470
const (
	P2P_NO_LINK       P2pLinkType = iota
	P2P_INDIRECT_LINK P2pLinkType = 1
	P2P_DIRECT_LINK   P2pLinkType = 2
)

// Pstate as declared in brml/brml.h:480
type Pstate int32

// Pstate enumeration from brml/brml.h:480
const (
	PSTATE_0 Pstate = iota
	PSTATE_1 Pstate = 1
	PSTATE_2 Pstate = 2
	PSTATE_3 Pstate = 3
)

// BrLinkErrorCounter as declared in brml/brml.h:492
type BrLinkErrorCounter int32

// BrLinkErrorCounter enumeration from brml/brml.h:492
const (
	BRLINK_ERROR_DL_REPLAY   BrLinkErrorCounter = iota
	BRLINK_ERROR_DL_RECOVERY BrLinkErrorCounter = 1
	BRLINK_ERROR_DL_CRC_FLIT BrLinkErrorCounter = 2
	BRLINK_ERROR_DL_CRC_DATA BrLinkErrorCounter = 3
	BRLINK_ERROR_COUNT       BrLinkErrorCounter = 4
)
